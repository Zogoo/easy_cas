/*
 * This file is generated by jOOQ.
 */
package com.cas.easycas.dao;


import com.cas.easycas.dao.tables.AdRule;
import com.cas.easycas.dao.tables.AuthChain;
import com.cas.easycas.dao.tables.AuthInfo;
import com.cas.easycas.dao.tables.ClientCertificateRule;
import com.cas.easycas.dao.tables.DeviseRule;
import com.cas.easycas.dao.tables.DuoRule;
import com.cas.easycas.dao.tables.FidoRule;
import com.cas.easycas.dao.tables.FlywaySchemaHistory;
import com.cas.easycas.dao.tables.IpRule;
import com.cas.easycas.dao.tables.LoginIp;
import com.cas.easycas.dao.tables.OtpRule;
import com.cas.easycas.dao.tables.PasswordRule;
import com.cas.easycas.dao.tables.RootCertificate;
import com.cas.easycas.dao.tables.SamlRule;
import com.cas.easycas.dao.tables.Users;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Catalog;
import org.jooq.Sequence;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Public extends SchemaImpl {

    private static final long serialVersionUID = -184759444;

    /**
     * The reference instance of <code>public</code>
     */
    public static final Public PUBLIC = new Public();

    /**
     * The table <code>public.ad_rule</code>.
     */
    public final AdRule AD_RULE = com.cas.easycas.dao.tables.AdRule.AD_RULE;

    /**
     * The table <code>public.auth_chain</code>.
     */
    public final AuthChain AUTH_CHAIN = com.cas.easycas.dao.tables.AuthChain.AUTH_CHAIN;

    /**
     * The table <code>public.auth_info</code>.
     */
    public final AuthInfo AUTH_INFO = com.cas.easycas.dao.tables.AuthInfo.AUTH_INFO;

    /**
     * The table <code>public.client_certificate_rule</code>.
     */
    public final ClientCertificateRule CLIENT_CERTIFICATE_RULE = com.cas.easycas.dao.tables.ClientCertificateRule.CLIENT_CERTIFICATE_RULE;

    /**
     * The table <code>public.devise_rule</code>.
     */
    public final DeviseRule DEVISE_RULE = com.cas.easycas.dao.tables.DeviseRule.DEVISE_RULE;

    /**
     * The table <code>public.duo_rule</code>.
     */
    public final DuoRule DUO_RULE = com.cas.easycas.dao.tables.DuoRule.DUO_RULE;

    /**
     * The table <code>public.fido_rule</code>.
     */
    public final FidoRule FIDO_RULE = com.cas.easycas.dao.tables.FidoRule.FIDO_RULE;

    /**
     * The table <code>public.flyway_schema_history</code>.
     */
    public final FlywaySchemaHistory FLYWAY_SCHEMA_HISTORY = com.cas.easycas.dao.tables.FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY;

    /**
     * The table <code>public.ip_rule</code>.
     */
    public final IpRule IP_RULE = com.cas.easycas.dao.tables.IpRule.IP_RULE;

    /**
     * The table <code>public.login_ip</code>.
     */
    public final LoginIp LOGIN_IP = com.cas.easycas.dao.tables.LoginIp.LOGIN_IP;

    /**
     * The table <code>public.otp_rule</code>.
     */
    public final OtpRule OTP_RULE = com.cas.easycas.dao.tables.OtpRule.OTP_RULE;

    /**
     * The table <code>public.password_rule</code>.
     */
    public final PasswordRule PASSWORD_RULE = com.cas.easycas.dao.tables.PasswordRule.PASSWORD_RULE;

    /**
     * The table <code>public.root_certificate</code>.
     */
    public final RootCertificate ROOT_CERTIFICATE = com.cas.easycas.dao.tables.RootCertificate.ROOT_CERTIFICATE;

    /**
     * The table <code>public.saml_rule</code>.
     */
    public final SamlRule SAML_RULE = com.cas.easycas.dao.tables.SamlRule.SAML_RULE;

    /**
     * The table <code>public.users</code>.
     */
    public final Users USERS = com.cas.easycas.dao.tables.Users.USERS;

    /**
     * No further instances allowed
     */
    private Public() {
        super("public", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Sequence<?>> getSequences() {
        List result = new ArrayList();
        result.addAll(getSequences0());
        return result;
    }

    private final List<Sequence<?>> getSequences0() {
        return Arrays.<Sequence<?>>asList(
            Sequences.AD_RULE_ID_SEQ,
            Sequences.AUTH_CHAIN_ID_SEQ,
            Sequences.AUTH_INFO_ID_SEQ,
            Sequences.CLIENT_CERTIFICATE_RULE_ID_SEQ,
            Sequences.DEVISE_RULE_ID_SEQ,
            Sequences.DUO_RULE_ID_SEQ,
            Sequences.FIDO_RULE_ID_SEQ,
            Sequences.IP_RULE_ID_SEQ,
            Sequences.LOGIN_IP_ID_SEQ,
            Sequences.OTP_RULE_ID_SEQ,
            Sequences.PASSWORD_RULE_ID_SEQ,
            Sequences.ROOT_CERTIFICATE_ID_SEQ,
            Sequences.SAML_RULE_ID_SEQ,
            Sequences.USERS_ID_SEQ);
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            AdRule.AD_RULE,
            AuthChain.AUTH_CHAIN,
            AuthInfo.AUTH_INFO,
            ClientCertificateRule.CLIENT_CERTIFICATE_RULE,
            DeviseRule.DEVISE_RULE,
            DuoRule.DUO_RULE,
            FidoRule.FIDO_RULE,
            FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY,
            IpRule.IP_RULE,
            LoginIp.LOGIN_IP,
            OtpRule.OTP_RULE,
            PasswordRule.PASSWORD_RULE,
            RootCertificate.ROOT_CERTIFICATE,
            SamlRule.SAML_RULE,
            Users.USERS);
    }
}
