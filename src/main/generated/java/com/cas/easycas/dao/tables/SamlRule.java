/*
 * This file is generated by jOOQ.
 */
package com.cas.easycas.dao.tables;


import com.cas.easycas.dao.Indexes;
import com.cas.easycas.dao.Keys;
import com.cas.easycas.dao.Public;
import com.cas.easycas.dao.tables.records.SamlRuleRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SamlRule extends TableImpl<SamlRuleRecord> {

    private static final long serialVersionUID = 1542909123;

    /**
     * The reference instance of <code>public.saml_rule</code>
     */
    public static final SamlRule SAML_RULE = new SamlRule();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SamlRuleRecord> getRecordType() {
        return SamlRuleRecord.class;
    }

    /**
     * The column <code>public.saml_rule.id</code>.
     */
    public final TableField<SamlRuleRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('saml_rule_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>public.saml_rule.chain_id</code>.
     */
    public final TableField<SamlRuleRecord, Long> CHAIN_ID = createField("chain_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.saml_rule.created_at</code>.
     */
    public final TableField<SamlRuleRecord, Timestamp> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>public.saml_rule.updated_at</code>.
     */
    public final TableField<SamlRuleRecord, Timestamp> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * Create a <code>public.saml_rule</code> table reference
     */
    public SamlRule() {
        this(DSL.name("saml_rule"), null);
    }

    /**
     * Create an aliased <code>public.saml_rule</code> table reference
     */
    public SamlRule(String alias) {
        this(DSL.name(alias), SAML_RULE);
    }

    /**
     * Create an aliased <code>public.saml_rule</code> table reference
     */
    public SamlRule(Name alias) {
        this(alias, SAML_RULE);
    }

    private SamlRule(Name alias, Table<SamlRuleRecord> aliased) {
        this(alias, aliased, null);
    }

    private SamlRule(Name alias, Table<SamlRuleRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> SamlRule(Table<O> child, ForeignKey<O, SamlRuleRecord> key) {
        super(child, key, SAML_RULE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SAML_RULE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<SamlRuleRecord, Long> getIdentity() {
        return Keys.IDENTITY_SAML_RULE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SamlRuleRecord> getPrimaryKey() {
        return Keys.SAML_RULE_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SamlRuleRecord>> getKeys() {
        return Arrays.<UniqueKey<SamlRuleRecord>>asList(Keys.SAML_RULE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<SamlRuleRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<SamlRuleRecord, ?>>asList(Keys.SAML_RULE__SAML_RULE_CHAIN_ID_FKEY);
    }

    public AuthChain authChain() {
        return new AuthChain(this, Keys.SAML_RULE__SAML_RULE_CHAIN_ID_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SamlRule as(String alias) {
        return new SamlRule(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SamlRule as(Name alias) {
        return new SamlRule(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SamlRule rename(String name) {
        return new SamlRule(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SamlRule rename(Name name) {
        return new SamlRule(name, null);
    }
}
