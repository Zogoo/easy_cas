/*
 * This file is generated by jOOQ.
 */
package com.cas.easycas.dao;


import com.cas.easycas.dao.tables.AdRule;
import com.cas.easycas.dao.tables.AuthChain;
import com.cas.easycas.dao.tables.AuthInfo;
import com.cas.easycas.dao.tables.Authorities;
import com.cas.easycas.dao.tables.ClientCertificateRule;
import com.cas.easycas.dao.tables.Clientdetails;
import com.cas.easycas.dao.tables.Companies;
import com.cas.easycas.dao.tables.DeviseRule;
import com.cas.easycas.dao.tables.DuoRule;
import com.cas.easycas.dao.tables.FidoRule;
import com.cas.easycas.dao.tables.FlywaySchemaHistory;
import com.cas.easycas.dao.tables.IpRule;
import com.cas.easycas.dao.tables.LoginIp;
import com.cas.easycas.dao.tables.OauthAccessToken;
import com.cas.easycas.dao.tables.OauthClientDetails;
import com.cas.easycas.dao.tables.OauthClientToken;
import com.cas.easycas.dao.tables.OtpRule;
import com.cas.easycas.dao.tables.PasswordRule;
import com.cas.easycas.dao.tables.RootCertificate;
import com.cas.easycas.dao.tables.SamlRule;
import com.cas.easycas.dao.tables.Users;
import com.cas.easycas.dao.tables.records.AdRuleRecord;
import com.cas.easycas.dao.tables.records.AuthChainRecord;
import com.cas.easycas.dao.tables.records.AuthInfoRecord;
import com.cas.easycas.dao.tables.records.AuthoritiesRecord;
import com.cas.easycas.dao.tables.records.ClientCertificateRuleRecord;
import com.cas.easycas.dao.tables.records.ClientdetailsRecord;
import com.cas.easycas.dao.tables.records.CompaniesRecord;
import com.cas.easycas.dao.tables.records.DeviseRuleRecord;
import com.cas.easycas.dao.tables.records.DuoRuleRecord;
import com.cas.easycas.dao.tables.records.FidoRuleRecord;
import com.cas.easycas.dao.tables.records.FlywaySchemaHistoryRecord;
import com.cas.easycas.dao.tables.records.IpRuleRecord;
import com.cas.easycas.dao.tables.records.LoginIpRecord;
import com.cas.easycas.dao.tables.records.OauthAccessTokenRecord;
import com.cas.easycas.dao.tables.records.OauthClientDetailsRecord;
import com.cas.easycas.dao.tables.records.OauthClientTokenRecord;
import com.cas.easycas.dao.tables.records.OtpRuleRecord;
import com.cas.easycas.dao.tables.records.PasswordRuleRecord;
import com.cas.easycas.dao.tables.records.RootCertificateRecord;
import com.cas.easycas.dao.tables.records.SamlRuleRecord;
import com.cas.easycas.dao.tables.records.UsersRecord;

import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>public</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<AdRuleRecord, Long> IDENTITY_AD_RULE = Identities0.IDENTITY_AD_RULE;
    public static final Identity<AuthChainRecord, Long> IDENTITY_AUTH_CHAIN = Identities0.IDENTITY_AUTH_CHAIN;
    public static final Identity<AuthInfoRecord, Long> IDENTITY_AUTH_INFO = Identities0.IDENTITY_AUTH_INFO;
    public static final Identity<ClientCertificateRuleRecord, Long> IDENTITY_CLIENT_CERTIFICATE_RULE = Identities0.IDENTITY_CLIENT_CERTIFICATE_RULE;
    public static final Identity<CompaniesRecord, Long> IDENTITY_COMPANIES = Identities0.IDENTITY_COMPANIES;
    public static final Identity<DeviseRuleRecord, Long> IDENTITY_DEVISE_RULE = Identities0.IDENTITY_DEVISE_RULE;
    public static final Identity<DuoRuleRecord, Long> IDENTITY_DUO_RULE = Identities0.IDENTITY_DUO_RULE;
    public static final Identity<FidoRuleRecord, Long> IDENTITY_FIDO_RULE = Identities0.IDENTITY_FIDO_RULE;
    public static final Identity<IpRuleRecord, Long> IDENTITY_IP_RULE = Identities0.IDENTITY_IP_RULE;
    public static final Identity<LoginIpRecord, Long> IDENTITY_LOGIN_IP = Identities0.IDENTITY_LOGIN_IP;
    public static final Identity<OtpRuleRecord, Long> IDENTITY_OTP_RULE = Identities0.IDENTITY_OTP_RULE;
    public static final Identity<PasswordRuleRecord, Long> IDENTITY_PASSWORD_RULE = Identities0.IDENTITY_PASSWORD_RULE;
    public static final Identity<RootCertificateRecord, Long> IDENTITY_ROOT_CERTIFICATE = Identities0.IDENTITY_ROOT_CERTIFICATE;
    public static final Identity<SamlRuleRecord, Long> IDENTITY_SAML_RULE = Identities0.IDENTITY_SAML_RULE;
    public static final Identity<UsersRecord, Long> IDENTITY_USERS = Identities0.IDENTITY_USERS;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AdRuleRecord> AD_RULE_PKEY = UniqueKeys0.AD_RULE_PKEY;
    public static final UniqueKey<AuthChainRecord> AUTH_CHAIN_PKEY = UniqueKeys0.AUTH_CHAIN_PKEY;
    public static final UniqueKey<AuthInfoRecord> AUTH_INFO_PKEY = UniqueKeys0.AUTH_INFO_PKEY;
    public static final UniqueKey<ClientCertificateRuleRecord> CLIENT_CERTIFICATE_RULE_PKEY = UniqueKeys0.CLIENT_CERTIFICATE_RULE_PKEY;
    public static final UniqueKey<ClientdetailsRecord> CLIENTDETAILS_PKEY = UniqueKeys0.CLIENTDETAILS_PKEY;
    public static final UniqueKey<CompaniesRecord> COMPANIES_PKEY = UniqueKeys0.COMPANIES_PKEY;
    public static final UniqueKey<DeviseRuleRecord> DEVISE_RULE_PKEY = UniqueKeys0.DEVISE_RULE_PKEY;
    public static final UniqueKey<DuoRuleRecord> DUO_RULE_PKEY = UniqueKeys0.DUO_RULE_PKEY;
    public static final UniqueKey<FidoRuleRecord> FIDO_RULE_PKEY = UniqueKeys0.FIDO_RULE_PKEY;
    public static final UniqueKey<FlywaySchemaHistoryRecord> FLYWAY_SCHEMA_HISTORY_PK = UniqueKeys0.FLYWAY_SCHEMA_HISTORY_PK;
    public static final UniqueKey<IpRuleRecord> IP_RULE_PKEY = UniqueKeys0.IP_RULE_PKEY;
    public static final UniqueKey<LoginIpRecord> LOGIN_IP_PKEY = UniqueKeys0.LOGIN_IP_PKEY;
    public static final UniqueKey<OauthAccessTokenRecord> OAUTH_ACCESS_TOKEN_PKEY = UniqueKeys0.OAUTH_ACCESS_TOKEN_PKEY;
    public static final UniqueKey<OauthClientDetailsRecord> OAUTH_CLIENT_DETAILS_PKEY = UniqueKeys0.OAUTH_CLIENT_DETAILS_PKEY;
    public static final UniqueKey<OauthClientTokenRecord> OAUTH_CLIENT_TOKEN_PKEY = UniqueKeys0.OAUTH_CLIENT_TOKEN_PKEY;
    public static final UniqueKey<OtpRuleRecord> OTP_RULE_PKEY = UniqueKeys0.OTP_RULE_PKEY;
    public static final UniqueKey<PasswordRuleRecord> PASSWORD_RULE_PKEY = UniqueKeys0.PASSWORD_RULE_PKEY;
    public static final UniqueKey<RootCertificateRecord> ROOT_CERTIFICATE_PKEY = UniqueKeys0.ROOT_CERTIFICATE_PKEY;
    public static final UniqueKey<SamlRuleRecord> SAML_RULE_PKEY = UniqueKeys0.SAML_RULE_PKEY;
    public static final UniqueKey<UsersRecord> USERS_PKEY = UniqueKeys0.USERS_PKEY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<AdRuleRecord, AuthChainRecord> AD_RULE__AD_RULE_CHAIN_ID_FKEY = ForeignKeys0.AD_RULE__AD_RULE_CHAIN_ID_FKEY;
    public static final ForeignKey<AuthoritiesRecord, UsersRecord> AUTHORITIES__AUTHORITIES_USER_ID_FKEY = ForeignKeys0.AUTHORITIES__AUTHORITIES_USER_ID_FKEY;
    public static final ForeignKey<ClientCertificateRuleRecord, AuthChainRecord> CLIENT_CERTIFICATE_RULE__CLIENT_CERTIFICATE_RULE_CHAIN_ID_FKEY = ForeignKeys0.CLIENT_CERTIFICATE_RULE__CLIENT_CERTIFICATE_RULE_CHAIN_ID_FKEY;
    public static final ForeignKey<ClientCertificateRuleRecord, RootCertificateRecord> CLIENT_CERTIFICATE_RULE__CLIENT_CERTIFICATE_RULE_ROOT_CERTIFICATE_ID_FKEY = ForeignKeys0.CLIENT_CERTIFICATE_RULE__CLIENT_CERTIFICATE_RULE_ROOT_CERTIFICATE_ID_FKEY;
    public static final ForeignKey<DeviseRuleRecord, AuthChainRecord> DEVISE_RULE__DEVISE_RULE_CHAIN_ID_FKEY = ForeignKeys0.DEVISE_RULE__DEVISE_RULE_CHAIN_ID_FKEY;
    public static final ForeignKey<DuoRuleRecord, AuthChainRecord> DUO_RULE__DUO_RULE_CHAIN_ID_FKEY = ForeignKeys0.DUO_RULE__DUO_RULE_CHAIN_ID_FKEY;
    public static final ForeignKey<FidoRuleRecord, AuthChainRecord> FIDO_RULE__FIDO_RULE_CHAIN_ID_FKEY = ForeignKeys0.FIDO_RULE__FIDO_RULE_CHAIN_ID_FKEY;
    public static final ForeignKey<IpRuleRecord, AuthChainRecord> IP_RULE__IP_RULE_CHAIN_ID_FKEY = ForeignKeys0.IP_RULE__IP_RULE_CHAIN_ID_FKEY;
    public static final ForeignKey<OauthAccessTokenRecord, UsersRecord> OAUTH_ACCESS_TOKEN__OAUTH_ACCESS_TOKEN_USER_ID_FKEY = ForeignKeys0.OAUTH_ACCESS_TOKEN__OAUTH_ACCESS_TOKEN_USER_ID_FKEY;
    public static final ForeignKey<OauthClientTokenRecord, UsersRecord> OAUTH_CLIENT_TOKEN__OAUTH_CLIENT_TOKEN_USER_ID_FKEY = ForeignKeys0.OAUTH_CLIENT_TOKEN__OAUTH_CLIENT_TOKEN_USER_ID_FKEY;
    public static final ForeignKey<OtpRuleRecord, AuthChainRecord> OTP_RULE__OTP_RULE_CHAIN_ID_FKEY = ForeignKeys0.OTP_RULE__OTP_RULE_CHAIN_ID_FKEY;
    public static final ForeignKey<PasswordRuleRecord, AuthChainRecord> PASSWORD_RULE__PASSWORD_RULE_CHAIN_ID_FKEY = ForeignKeys0.PASSWORD_RULE__PASSWORD_RULE_CHAIN_ID_FKEY;
    public static final ForeignKey<PasswordRuleRecord, AuthInfoRecord> PASSWORD_RULE__PASSWORD_RULE_AUTH_INFO_ID_FKEY = ForeignKeys0.PASSWORD_RULE__PASSWORD_RULE_AUTH_INFO_ID_FKEY;
    public static final ForeignKey<SamlRuleRecord, AuthChainRecord> SAML_RULE__SAML_RULE_CHAIN_ID_FKEY = ForeignKeys0.SAML_RULE__SAML_RULE_CHAIN_ID_FKEY;
    public static final ForeignKey<UsersRecord, CompaniesRecord> USERS__USERS_COMPANY_ID_FKEY = ForeignKeys0.USERS__USERS_COMPANY_ID_FKEY;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<AdRuleRecord, Long> IDENTITY_AD_RULE = Internal.createIdentity(AdRule.AD_RULE, AdRule.AD_RULE.ID);
        public static Identity<AuthChainRecord, Long> IDENTITY_AUTH_CHAIN = Internal.createIdentity(AuthChain.AUTH_CHAIN, AuthChain.AUTH_CHAIN.ID);
        public static Identity<AuthInfoRecord, Long> IDENTITY_AUTH_INFO = Internal.createIdentity(AuthInfo.AUTH_INFO, AuthInfo.AUTH_INFO.ID);
        public static Identity<ClientCertificateRuleRecord, Long> IDENTITY_CLIENT_CERTIFICATE_RULE = Internal.createIdentity(ClientCertificateRule.CLIENT_CERTIFICATE_RULE, ClientCertificateRule.CLIENT_CERTIFICATE_RULE.ID);
        public static Identity<CompaniesRecord, Long> IDENTITY_COMPANIES = Internal.createIdentity(Companies.COMPANIES, Companies.COMPANIES.ID);
        public static Identity<DeviseRuleRecord, Long> IDENTITY_DEVISE_RULE = Internal.createIdentity(DeviseRule.DEVISE_RULE, DeviseRule.DEVISE_RULE.ID);
        public static Identity<DuoRuleRecord, Long> IDENTITY_DUO_RULE = Internal.createIdentity(DuoRule.DUO_RULE, DuoRule.DUO_RULE.ID);
        public static Identity<FidoRuleRecord, Long> IDENTITY_FIDO_RULE = Internal.createIdentity(FidoRule.FIDO_RULE, FidoRule.FIDO_RULE.ID);
        public static Identity<IpRuleRecord, Long> IDENTITY_IP_RULE = Internal.createIdentity(IpRule.IP_RULE, IpRule.IP_RULE.ID);
        public static Identity<LoginIpRecord, Long> IDENTITY_LOGIN_IP = Internal.createIdentity(LoginIp.LOGIN_IP, LoginIp.LOGIN_IP.ID);
        public static Identity<OtpRuleRecord, Long> IDENTITY_OTP_RULE = Internal.createIdentity(OtpRule.OTP_RULE, OtpRule.OTP_RULE.ID);
        public static Identity<PasswordRuleRecord, Long> IDENTITY_PASSWORD_RULE = Internal.createIdentity(PasswordRule.PASSWORD_RULE, PasswordRule.PASSWORD_RULE.ID);
        public static Identity<RootCertificateRecord, Long> IDENTITY_ROOT_CERTIFICATE = Internal.createIdentity(RootCertificate.ROOT_CERTIFICATE, RootCertificate.ROOT_CERTIFICATE.ID);
        public static Identity<SamlRuleRecord, Long> IDENTITY_SAML_RULE = Internal.createIdentity(SamlRule.SAML_RULE, SamlRule.SAML_RULE.ID);
        public static Identity<UsersRecord, Long> IDENTITY_USERS = Internal.createIdentity(Users.USERS, Users.USERS.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<AdRuleRecord> AD_RULE_PKEY = Internal.createUniqueKey(AdRule.AD_RULE, "ad_rule_pkey", AdRule.AD_RULE.ID);
        public static final UniqueKey<AuthChainRecord> AUTH_CHAIN_PKEY = Internal.createUniqueKey(AuthChain.AUTH_CHAIN, "auth_chain_pkey", AuthChain.AUTH_CHAIN.ID);
        public static final UniqueKey<AuthInfoRecord> AUTH_INFO_PKEY = Internal.createUniqueKey(AuthInfo.AUTH_INFO, "auth_info_pkey", AuthInfo.AUTH_INFO.ID);
        public static final UniqueKey<ClientCertificateRuleRecord> CLIENT_CERTIFICATE_RULE_PKEY = Internal.createUniqueKey(ClientCertificateRule.CLIENT_CERTIFICATE_RULE, "client_certificate_rule_pkey", ClientCertificateRule.CLIENT_CERTIFICATE_RULE.ID);
        public static final UniqueKey<ClientdetailsRecord> CLIENTDETAILS_PKEY = Internal.createUniqueKey(Clientdetails.CLIENTDETAILS, "clientdetails_pkey", Clientdetails.CLIENTDETAILS.APPID);
        public static final UniqueKey<CompaniesRecord> COMPANIES_PKEY = Internal.createUniqueKey(Companies.COMPANIES, "companies_pkey", Companies.COMPANIES.ID);
        public static final UniqueKey<DeviseRuleRecord> DEVISE_RULE_PKEY = Internal.createUniqueKey(DeviseRule.DEVISE_RULE, "devise_rule_pkey", DeviseRule.DEVISE_RULE.ID);
        public static final UniqueKey<DuoRuleRecord> DUO_RULE_PKEY = Internal.createUniqueKey(DuoRule.DUO_RULE, "duo_rule_pkey", DuoRule.DUO_RULE.ID);
        public static final UniqueKey<FidoRuleRecord> FIDO_RULE_PKEY = Internal.createUniqueKey(FidoRule.FIDO_RULE, "fido_rule_pkey", FidoRule.FIDO_RULE.ID);
        public static final UniqueKey<FlywaySchemaHistoryRecord> FLYWAY_SCHEMA_HISTORY_PK = Internal.createUniqueKey(FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY, "flyway_schema_history_pk", FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.INSTALLED_RANK);
        public static final UniqueKey<IpRuleRecord> IP_RULE_PKEY = Internal.createUniqueKey(IpRule.IP_RULE, "ip_rule_pkey", IpRule.IP_RULE.ID);
        public static final UniqueKey<LoginIpRecord> LOGIN_IP_PKEY = Internal.createUniqueKey(LoginIp.LOGIN_IP, "login_ip_pkey", LoginIp.LOGIN_IP.ID);
        public static final UniqueKey<OauthAccessTokenRecord> OAUTH_ACCESS_TOKEN_PKEY = Internal.createUniqueKey(OauthAccessToken.OAUTH_ACCESS_TOKEN, "oauth_access_token_pkey", OauthAccessToken.OAUTH_ACCESS_TOKEN.AUTHENTICATION_ID);
        public static final UniqueKey<OauthClientDetailsRecord> OAUTH_CLIENT_DETAILS_PKEY = Internal.createUniqueKey(OauthClientDetails.OAUTH_CLIENT_DETAILS, "oauth_client_details_pkey", OauthClientDetails.OAUTH_CLIENT_DETAILS.CLIENT_ID);
        public static final UniqueKey<OauthClientTokenRecord> OAUTH_CLIENT_TOKEN_PKEY = Internal.createUniqueKey(OauthClientToken.OAUTH_CLIENT_TOKEN, "oauth_client_token_pkey", OauthClientToken.OAUTH_CLIENT_TOKEN.AUTHENTICATION_ID);
        public static final UniqueKey<OtpRuleRecord> OTP_RULE_PKEY = Internal.createUniqueKey(OtpRule.OTP_RULE, "otp_rule_pkey", OtpRule.OTP_RULE.ID);
        public static final UniqueKey<PasswordRuleRecord> PASSWORD_RULE_PKEY = Internal.createUniqueKey(PasswordRule.PASSWORD_RULE, "password_rule_pkey", PasswordRule.PASSWORD_RULE.ID);
        public static final UniqueKey<RootCertificateRecord> ROOT_CERTIFICATE_PKEY = Internal.createUniqueKey(RootCertificate.ROOT_CERTIFICATE, "root_certificate_pkey", RootCertificate.ROOT_CERTIFICATE.ID);
        public static final UniqueKey<SamlRuleRecord> SAML_RULE_PKEY = Internal.createUniqueKey(SamlRule.SAML_RULE, "saml_rule_pkey", SamlRule.SAML_RULE.ID);
        public static final UniqueKey<UsersRecord> USERS_PKEY = Internal.createUniqueKey(Users.USERS, "users_pkey", Users.USERS.ID);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<AdRuleRecord, AuthChainRecord> AD_RULE__AD_RULE_CHAIN_ID_FKEY = Internal.createForeignKey(com.cas.easycas.dao.Keys.AUTH_CHAIN_PKEY, AdRule.AD_RULE, "ad_rule__ad_rule_chain_id_fkey", AdRule.AD_RULE.CHAIN_ID);
        public static final ForeignKey<AuthoritiesRecord, UsersRecord> AUTHORITIES__AUTHORITIES_USER_ID_FKEY = Internal.createForeignKey(com.cas.easycas.dao.Keys.USERS_PKEY, Authorities.AUTHORITIES, "authorities__authorities_user_id_fkey", Authorities.AUTHORITIES.USER_ID);
        public static final ForeignKey<ClientCertificateRuleRecord, AuthChainRecord> CLIENT_CERTIFICATE_RULE__CLIENT_CERTIFICATE_RULE_CHAIN_ID_FKEY = Internal.createForeignKey(com.cas.easycas.dao.Keys.AUTH_CHAIN_PKEY, ClientCertificateRule.CLIENT_CERTIFICATE_RULE, "client_certificate_rule__client_certificate_rule_chain_id_fkey", ClientCertificateRule.CLIENT_CERTIFICATE_RULE.CHAIN_ID);
        public static final ForeignKey<ClientCertificateRuleRecord, RootCertificateRecord> CLIENT_CERTIFICATE_RULE__CLIENT_CERTIFICATE_RULE_ROOT_CERTIFICATE_ID_FKEY = Internal.createForeignKey(com.cas.easycas.dao.Keys.ROOT_CERTIFICATE_PKEY, ClientCertificateRule.CLIENT_CERTIFICATE_RULE, "client_certificate_rule__client_certificate_rule_root_certificate_id_fkey", ClientCertificateRule.CLIENT_CERTIFICATE_RULE.ROOT_CERTIFICATE_ID);
        public static final ForeignKey<DeviseRuleRecord, AuthChainRecord> DEVISE_RULE__DEVISE_RULE_CHAIN_ID_FKEY = Internal.createForeignKey(com.cas.easycas.dao.Keys.AUTH_CHAIN_PKEY, DeviseRule.DEVISE_RULE, "devise_rule__devise_rule_chain_id_fkey", DeviseRule.DEVISE_RULE.CHAIN_ID);
        public static final ForeignKey<DuoRuleRecord, AuthChainRecord> DUO_RULE__DUO_RULE_CHAIN_ID_FKEY = Internal.createForeignKey(com.cas.easycas.dao.Keys.AUTH_CHAIN_PKEY, DuoRule.DUO_RULE, "duo_rule__duo_rule_chain_id_fkey", DuoRule.DUO_RULE.CHAIN_ID);
        public static final ForeignKey<FidoRuleRecord, AuthChainRecord> FIDO_RULE__FIDO_RULE_CHAIN_ID_FKEY = Internal.createForeignKey(com.cas.easycas.dao.Keys.AUTH_CHAIN_PKEY, FidoRule.FIDO_RULE, "fido_rule__fido_rule_chain_id_fkey", FidoRule.FIDO_RULE.CHAIN_ID);
        public static final ForeignKey<IpRuleRecord, AuthChainRecord> IP_RULE__IP_RULE_CHAIN_ID_FKEY = Internal.createForeignKey(com.cas.easycas.dao.Keys.AUTH_CHAIN_PKEY, IpRule.IP_RULE, "ip_rule__ip_rule_chain_id_fkey", IpRule.IP_RULE.CHAIN_ID);
        public static final ForeignKey<OauthAccessTokenRecord, UsersRecord> OAUTH_ACCESS_TOKEN__OAUTH_ACCESS_TOKEN_USER_ID_FKEY = Internal.createForeignKey(com.cas.easycas.dao.Keys.USERS_PKEY, OauthAccessToken.OAUTH_ACCESS_TOKEN, "oauth_access_token__oauth_access_token_user_id_fkey", OauthAccessToken.OAUTH_ACCESS_TOKEN.USER_ID);
        public static final ForeignKey<OauthClientTokenRecord, UsersRecord> OAUTH_CLIENT_TOKEN__OAUTH_CLIENT_TOKEN_USER_ID_FKEY = Internal.createForeignKey(com.cas.easycas.dao.Keys.USERS_PKEY, OauthClientToken.OAUTH_CLIENT_TOKEN, "oauth_client_token__oauth_client_token_user_id_fkey", OauthClientToken.OAUTH_CLIENT_TOKEN.USER_ID);
        public static final ForeignKey<OtpRuleRecord, AuthChainRecord> OTP_RULE__OTP_RULE_CHAIN_ID_FKEY = Internal.createForeignKey(com.cas.easycas.dao.Keys.AUTH_CHAIN_PKEY, OtpRule.OTP_RULE, "otp_rule__otp_rule_chain_id_fkey", OtpRule.OTP_RULE.CHAIN_ID);
        public static final ForeignKey<PasswordRuleRecord, AuthChainRecord> PASSWORD_RULE__PASSWORD_RULE_CHAIN_ID_FKEY = Internal.createForeignKey(com.cas.easycas.dao.Keys.AUTH_CHAIN_PKEY, PasswordRule.PASSWORD_RULE, "password_rule__password_rule_chain_id_fkey", PasswordRule.PASSWORD_RULE.CHAIN_ID);
        public static final ForeignKey<PasswordRuleRecord, AuthInfoRecord> PASSWORD_RULE__PASSWORD_RULE_AUTH_INFO_ID_FKEY = Internal.createForeignKey(com.cas.easycas.dao.Keys.AUTH_INFO_PKEY, PasswordRule.PASSWORD_RULE, "password_rule__password_rule_auth_info_id_fkey", PasswordRule.PASSWORD_RULE.AUTH_INFO_ID);
        public static final ForeignKey<SamlRuleRecord, AuthChainRecord> SAML_RULE__SAML_RULE_CHAIN_ID_FKEY = Internal.createForeignKey(com.cas.easycas.dao.Keys.AUTH_CHAIN_PKEY, SamlRule.SAML_RULE, "saml_rule__saml_rule_chain_id_fkey", SamlRule.SAML_RULE.CHAIN_ID);
        public static final ForeignKey<UsersRecord, CompaniesRecord> USERS__USERS_COMPANY_ID_FKEY = Internal.createForeignKey(com.cas.easycas.dao.Keys.COMPANIES_PKEY, Users.USERS, "users__users_company_id_fkey", Users.USERS.COMPANY_ID);
    }
}
