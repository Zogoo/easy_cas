/*
 * This file is generated by jOOQ.
 */
package com.cas.easycas.dao.tables.records;


import com.cas.easycas.dao.tables.AuthInfo;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AuthInfoRecord extends UpdatableRecordImpl<AuthInfoRecord> implements Record7<Long, Timestamp, Object, Timestamp, Timestamp, Timestamp, Timestamp> {

    private static final long serialVersionUID = 1676246712;

    /**
     * Setter for <code>public.auth_info.id</code>.
     */
    public AuthInfoRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.auth_info.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.auth_info.last_sign_in_at</code>.
     */
    public AuthInfoRecord setLastSignInAt(Timestamp value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.auth_info.last_sign_in_at</code>.
     */
    public Timestamp getLastSignInAt() {
        return (Timestamp) get(1);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public AuthInfoRecord setLastSignInIp(Object value) {
        set(2, value);
        return this;
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public Object getLastSignInIp() {
        return get(2);
    }

    /**
     * Setter for <code>public.auth_info.locked_at</code>.
     */
    public AuthInfoRecord setLockedAt(Timestamp value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.auth_info.locked_at</code>.
     */
    public Timestamp getLockedAt() {
        return (Timestamp) get(3);
    }

    /**
     * Setter for <code>public.auth_info.unlocked_at</code>.
     */
    public AuthInfoRecord setUnlockedAt(Timestamp value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.auth_info.unlocked_at</code>.
     */
    public Timestamp getUnlockedAt() {
        return (Timestamp) get(4);
    }

    /**
     * Setter for <code>public.auth_info.created_at</code>.
     */
    public AuthInfoRecord setCreatedAt(Timestamp value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.auth_info.created_at</code>.
     */
    public Timestamp getCreatedAt() {
        return (Timestamp) get(5);
    }

    /**
     * Setter for <code>public.auth_info.updated_at</code>.
     */
    public AuthInfoRecord setUpdatedAt(Timestamp value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.auth_info.updated_at</code>.
     */
    public Timestamp getUpdatedAt() {
        return (Timestamp) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Long, Timestamp, Object, Timestamp, Timestamp, Timestamp, Timestamp> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Long, Timestamp, Object, Timestamp, Timestamp, Timestamp, Timestamp> valuesRow() {
        return (Row7) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return AuthInfo.AUTH_INFO.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field2() {
        return AuthInfo.AUTH_INFO.LAST_SIGN_IN_AT;
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public Field<Object> field3() {
        return AuthInfo.AUTH_INFO.LAST_SIGN_IN_IP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field4() {
        return AuthInfo.AUTH_INFO.LOCKED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field5() {
        return AuthInfo.AUTH_INFO.UNLOCKED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field6() {
        return AuthInfo.AUTH_INFO.CREATED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field7() {
        return AuthInfo.AUTH_INFO.UPDATED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component2() {
        return getLastSignInAt();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public Object component3() {
        return getLastSignInIp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component4() {
        return getLockedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component5() {
        return getUnlockedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component6() {
        return getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component7() {
        return getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value2() {
        return getLastSignInAt();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public Object value3() {
        return getLastSignInIp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value4() {
        return getLockedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value5() {
        return getUnlockedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value6() {
        return getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value7() {
        return getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AuthInfoRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AuthInfoRecord value2(Timestamp value) {
        setLastSignInAt(value);
        return this;
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public AuthInfoRecord value3(Object value) {
        setLastSignInIp(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AuthInfoRecord value4(Timestamp value) {
        setLockedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AuthInfoRecord value5(Timestamp value) {
        setUnlockedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AuthInfoRecord value6(Timestamp value) {
        setCreatedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AuthInfoRecord value7(Timestamp value) {
        setUpdatedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AuthInfoRecord values(Long value1, Timestamp value2, Object value3, Timestamp value4, Timestamp value5, Timestamp value6, Timestamp value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AuthInfoRecord
     */
    public AuthInfoRecord() {
        super(AuthInfo.AUTH_INFO);
    }

    /**
     * Create a detached, initialised AuthInfoRecord
     */
    public AuthInfoRecord(Long id, Timestamp lastSignInAt, Object lastSignInIp, Timestamp lockedAt, Timestamp unlockedAt, Timestamp createdAt, Timestamp updatedAt) {
        super(AuthInfo.AUTH_INFO);

        set(0, id);
        set(1, lastSignInAt);
        set(2, lastSignInIp);
        set(3, lockedAt);
        set(4, unlockedAt);
        set(5, createdAt);
        set(6, updatedAt);
    }
}
